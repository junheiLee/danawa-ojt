<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ojt.first_be.dao.mapper.PartnerProductMapper">

    <insert id="insertAll" parameterType="PartnerProduct">
        INSERT INTO tPartnerProduct (
                        sPartnerProductCode,
                        sPartnerCode,
                        nCategoryCode,
                        sPartnerProductName,
                        nPcPrice,
                        nMobilePrice,
                        sUrl,
                        sImageUrl,
                        dtCreatedAt
        )
        VALUES
            <foreach collection="list" item="PartnerProduct" separator="," >
                (
                 #{PartnerProduct.code},
                 #{PartnerProduct.partnerCode},
                 #{PartnerProduct.categoryCode},
                 #{PartnerProduct.name},
                 #{PartnerProduct.pcPrice},
                 #{PartnerProduct.mobilePrice},
                 #{PartnerProduct.url},
                 #{PartnerProduct.imageUrl},
                 #{PartnerProduct.createdAt}
                )
            </foreach>
    </insert>

    <insert id="insert">
        INSERT INTO tPartnerProduct (
                        sPartnerProductCode,
                        sPartnerCode,
                        nCategoryCode,
                        sPartnerProductName,
                        nPcPrice,
                        nMobilePrice,
                        sUrl,
                        sImageUrl,
                        dtCreatedAt
        )
        VALUES (
                #{PartnerProduct.code},
                #{PartnerProduct.partnerCode},
                #{PartnerProduct.categoryCode},
                #{PartnerProduct.name},
                #{PartnerProduct.pcPrice},
                #{PartnerProduct.mobilePrice},
                #{PartnerProduct.url},
                #{PartnerProduct.imageUrl},
                #{PartnerProduct.createdAt}
            )
    </insert>

    <select id="selectAll" resultType="PartnerProduct">
        SELECT  PP.nCategoryCode AS categoryCode,
        C.sCategoryName AS categoryName,
        PP.sPartnerCode AS partnerCode,
        PP.sPartnerProductCode AS code,
        PP.sPartnerProductName AS name,
        PP.nPcPrice AS pcPrice,
        PP.nMobilePrice AS mobilePrice,
        PP.dtCreatedAt AS createdAt,
        PP.sUrl AS url,
        PP.sImageUrl AS imageUrl
        FROM tPartnerProduct PP
        JOIN tCategory C
        ON (PP.nCategoryCode = C.nCategoryCode)
        <where>
            <if test="categoryCode != null and categoryCode != 0">
                AND C.nCategoryCode = #{categoryCode}
            </if>
            <if test="searchCode != null and searchCode != ''">
                AND PP.sPartnerProductCode = #{searchCode}
            </if>
            <if test="searchName != null and searchName != ''">
                AND PP.sPartnerProductName LIKE CONCAT('%',#{searchName},'%')
            </if>
        </where>
        <trim prefix="ORDER BY">
            <choose>
                <when test="orderBy == 'createdAt'">
                    PP.dtCreatedAt
                </when>
                <otherwise>
                    PP.sPartnerProductCode
                </otherwise>
            </choose>
        </trim>
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="countAll">
        SELECT COUNT(sPartnerProductCode)
        FROM tPartnerProduct
        <where>
            <if test="categoryCode != null and categoryCode != ''">
                AND nCategoryCode = #{categoryCode}
            </if>
            <if test="searchCode != null and searchCode != ''">
                AND sPartnerProductCode = #{searchCode}
            </if>
            <if test="searchName != null and searchName != ''">
                AND sPartnerProductName LIKE CONCAT('%',#{searchName},'%')
            </if>
        </where>
    </select>
</mapper>
